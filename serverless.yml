service: contacts-api

frameworkVersion: "3"

provider:
  name: aws
  runtime: go1.x
  region: us-east-1
  stage: '${opt:stage, "dev"}'
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Scan
            - dynamodb:Query
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/contacts-${self:provider.stage}"

plugins:
  - serverless-dotenv-plugin
  - serverless-dynamodb-local
  - serverless-offline

package:
  individually: true
  exclude:
    - ./**
  include:
    - ./bin/**

custom:
  serverless-offline:
    noPrependStageInUrl: true
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true

functions:
  health:
    handler: bin/health
    events:
      - http:
          path: /health
          method: GET

resources:
  Resources:
    ContactsDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "contacts-${self:provider.stage}"
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S # Assuming id is a string attribute for UUID
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH # Making id the partition key
          - AttributeName: email
            KeyType: RANGE # Making name the sort key (range key)
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
